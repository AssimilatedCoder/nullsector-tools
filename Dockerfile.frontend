# Multi-stage build for React frontend on Ubuntu LTS
FROM ubuntu:22.04 as builder

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install Node.js and build dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY nullsector-dashboard/package*.json ./
COPY nullsector-dashboard/ ./

# Install dependencies (including dev dependencies for build)
RUN npm ci --only=production=false

# Build the application
RUN npm run build

# Production stage with Nginx on Ubuntu
FROM ubuntu:22.04

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install Nginx
RUN apt-get update && apt-get install -y \
    nginx \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy custom nginx configuration
COPY nginx-frontend.conf /etc/nginx/sites-available/default

# Copy built React app to nginx html directory
COPY --from=builder /app/build /usr/share/nginx/html

# Add health check endpoint
RUN echo 'server { listen 8080; location /health { return 200 "healthy\n"; access_log off; } }' > /etc/nginx/sites-available/health

# Enable sites
RUN ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/ \
    && ln -sf /etc/nginx/sites-available/health /etc/nginx/sites-enabled/ \
    && rm -f /etc/nginx/sites-enabled/default.bak

# Expose ports
EXPOSE 80 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
