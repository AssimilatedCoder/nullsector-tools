services:
  # Flask API Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: nullsector-api
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
    volumes:
      - ./logs:/app/logs
      - ./login_access.log:/app/login_access.log
      - ./user_activity.log:/app/user_activity.log
    networks:
      - nullsector-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7779/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: nullsector-frontend
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    networks:
      - nullsector-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nullsector-nginx
    restart: unless-stopped
    ports:
      - "2053:80"
    volumes:
      - ./nginx-production.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - api
    networks:
      - nullsector-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  nullsector-network:
    driver: bridge

volumes:
  logs:
    driver: local
